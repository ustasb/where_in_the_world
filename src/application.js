// Generated by CoffeeScript 1.6.3
(function() {
  var LightBox, Map;

  Map = (function() {
    var BACKGROUND_COLOR, SELECTED_REGION_COLOR;

    BACKGROUND_COLOR = '#2980B9';

    SELECTED_REGION_COLOR = '#2ECC71';

    function Map(container_id, mapName) {
      this.el = $('#' + container_id);
      this.mapName = mapName;
    }

    Map.prototype.draw = function() {
      var _this = this;
      return this.loadMap(function() {
        return _this.createMap();
      });
    };

    Map.prototype.loadMap = function(callback) {
      return $.get("vendor/jvectormap/maps/" + this.mapName + ".js", function(data) {
        eval(data);
        return callback();
      });
    };

    Map.prototype.createMap = function() {
      var _this = this;
      this.el.vectorMap({
        map: this.mapName,
        backgroundColor: BACKGROUND_COLOR,
        regionStyle: {
          selected: {
            fill: SELECTED_REGION_COLOR
          }
        },
        onRegionClick: function(e, regionCode) {
          return _this.map.setSelectedRegions(regionCode);
        }
      });
      return this.map = this.el.vectorMap('get', 'mapObject');
    };

    return Map;

  })();

  LightBox = (function() {
    var backdrop;

    backdrop = $('<div class="light-box-bg"></div>');

    LightBox.showBackdrop = (function() {
      var added;
      added = false;
      return function() {
        if (added) {
          return backdrop.show();
        } else {
          $(document.body).append(backdrop);
          return added = true;
        }
      };
    })();

    LightBox.hideBackdrop = function() {
      return backdrop.hide();
    };

    function LightBox(container_id) {
      this.el = $('#' + container_id);
      this.centerInWindow();
      this.show();
      this.bindEvents();
    }

    LightBox.prototype.bindEvents = function() {
      var _this = this;
      return $(window).resize(function() {
        return _this.centerInWindow();
      });
    };

    LightBox.prototype.centerInWindow = function() {
      var $window;
      $window = $(window);
      return this.el.css({
        left: ($window.width() - this.el.width()) / 2,
        top: ($window.height() - this.el.height()) / 2
      });
    };

    LightBox.prototype.hide = function() {
      LightBox.hideBackdrop();
      return this.el.hide();
    };

    LightBox.prototype.show = function() {
      LightBox.showBackdrop();
      return this.el.show();
    };

    return LightBox;

  })();

  $(document).ready(function() {
    var lightBox, world;
    world = new Map('world-map', 'world_mill_en');
    world.draw();
    lightBox = new LightBox('menu');
    return lightBox.hide();
  });

}).call(this);
